name: "Deploy Jobs to Databricks"

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      BDS_DB_NAME:
        description: BDS_DB_NAME
        required: true
        type: string

jobs:
  dev:
    name: Deploy to DEV
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Databricks CLI
        uses: databricks/setup-cli@main

      - name: Write to .databrickscfg
        run: |
          echo "[DEFAULT]" > $HOME/.databrickscfg
          echo "host = $DATABRICKS_HOST" >> $HOME/.databrickscfg
          echo "token = $DATABRICKS_TOKEN" >> $HOME/.databrickscfg

      - name: Set BDS_DB_NAME output
        id: set_bds_db_name
        run: echo "::set-output name=bds_db_name::${{ github.event.inputs.BDS_DB_NAME }}"

      - name: Run databricks bundle deploy
        env:
          AZ_SPN_APP_ID: ${{ secrets.AZ_SPN_APP_ID }}
          DBX_SP_APP_ID_DEV: ${{ secrets.DBX_SP_APP_ID_DEV }}
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          BUNDLE_VAR_ENV_NAME: "I am ENV from ROOT"
          ENV_NAME: "I am ENV from ROOT - Deploy"
          DATABRICKS_BUNDLE_ENV: dev
        run: |
          databricks bundle validate --var="BUNDLE_VAR_ENV_NAME=BUNDLE_VAR_ENV_NAME,NEW_VAR=NEW_VALUE"
          databricks bundle deploy --var="BUNDLE_VAR_ENV_NAME=BUNDLE_VAR_ENV_NAME,NEW_VAR=NEW_VALUE"
  # stage:
  #   name: Deploy to Stage
  #   needs: [dev]
  #   runs-on: ubuntu-latest
  #   environment: Staging
  #   steps:
  #     - name: Deploy JOBS to Stage
  #       run: echo "DBX Jobs have been successfully deployed to Stage"

  # prod:
  #   name: Deploy to Production
  #   needs: [stage]
  #   runs-on: ubuntu-latest
  #   environment: Production
  #   steps:
  #     - name: Deploy JOBS to Production
  #       run: echo "DBX Jobs have been successfully deployed to Production"

  # stage:
  #   name: Deploy to Stage
  #   needs: [dev]
  #   runs-on: ubuntu-latest
  #   environment: Staging
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Set up Databricks CLI
  #       uses: databricks/setup-cli@main

  #     - name: Write to .databrickscfg
  #       run: |
  #         echo "[DEFAULT]" > $HOME/.databrickscfg
  #         echo "host = $DATABRICKS_HOST" >> $HOME/.databrickscfg
  #         echo "token = $DATABRICKS_TOKEN" >> $HOME/.databrickscfg

  #     - name: Set BDS_DB_NAME output
  #       id: set_bds_db_name
  #       run: echo "::set-output name=bds_db_name::${{ github.event.inputs.BDS_DB_NAME }}"

  #     - name: Run databricks bundle deploy
  #       env:
  #         DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
  #         DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
  #         DATABRICKS_BUNDLE_ENV: stage
  #       run: |
  #         databricks bundle validate
  #         databricks bundle deploy
